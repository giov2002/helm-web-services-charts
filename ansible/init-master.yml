---
- name: Initialize Kubernetes Master
  hosts: smtp2
  become: yes
  tasks:
    - name: Check if Kubernetes is already initialized
      ansible.builtin.stat:
        path: /etc/kubernetes/admin.conf
      register: k8s_init_check

    - name: Initialize Kubernetes cluster
      ansible.builtin.command: >
        kubeadm init 
        --pod-network-cidr=10.244.0.0/16
        --apiserver-advertise-address={{ ansible_host }}
      when: not k8s_init_check.stat.exists
      register: kubeadm_init
      changed_when: true

    - name: Create .kube directory for user
      ansible.builtin.file:
        path: /home/{{ ansible_user }}/.kube
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0755'

    - name: Copy admin.conf to user's kube config
      ansible.builtin.copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/{{ ansible_user }}/.kube/config
        remote_src: yes
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0600'
        force: yes

    - name: Get join command
      ansible.builtin.command: kubeadm token create --print-join-command
      register: join_command
      changed_when: false

    - name: Save join command locally
      ansible.builtin.copy:
        content: "{{ join_command.stdout }}"
        dest: ./k8s-join-command.sh
        mode: '0755'
      delegate_to: localhost
      become: no

    - name: Check if Flannel is already installed
      ansible.builtin.shell: kubectl get deployment -n kube-flannel --no-headers 2>/dev/null | wc -l
      become_user: "{{ ansible_user }}"
      environment:
        KUBECONFIG: /home/{{ ansible_user }}/.kube/config
      register: flannel_check
      changed_when: false
      ignore_errors: yes

    - name: Install Flannel CNI
      ansible.builtin.command: >
        kubectl apply -f 
        https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
      become_user: "{{ ansible_user }}"
      environment:
        KUBECONFIG: /home/{{ ansible_user }}/.kube/config
      when: flannel_check.stdout == "0"
      changed_when: true

    - name: Wait for Flannel pods to be ready
      ansible.builtin.shell: |
        export KUBECONFIG=/home/{{ ansible_user }}/.kube/config
        kubectl get pods -n kube-flannel -o wide
      become_user: "{{ ansible_user }}"
      register: flannel_pods
      until: flannel_pods.stdout_lines | length > 1 and "Running" in flannel_pods.stdout
      retries: 20
      delay: 15
      changed_when: false

    - name: Get cluster info
      ansible.builtin.command: kubectl get nodes
      environment:
        KUBECONFIG: /home/{{ ansible_user }}/.kube/config
      become_user: "{{ ansible_user }}"
      register: cluster_info
      changed_when: false

    - name: Display cluster information
      ansible.builtin.debug:
        msg: "{{ cluster_info.stdout }}"