# Configuration Ansible pour projet Minikube + Helm
# Structure adaptée à votre environnement Debian 12 + Minikube

# Configuration de l'environnement (renommé pour éviter conflit)
project_environment:
  platform: "minikube"
  host_os: "debian12"
  kubernetes_context: "minikube"
  namespace_prefix: "dev"

# Configuration GitHub (pour CI)
github:
  # À modifier selon votre repo
  owner: "giov2002"
  repo: "helm-web-services-charts"  # ou le nom de votre repo
  branch: "main"

github_pat: "{{ ansible_env.GITHUB_PAT | default('') }}"
  
# Services disponibles dans votre stack
services:
  # DNS/Network
  bind9:
    path: "bind9"
    namespace: "dns"
    priority: 1
    dependencies: []

    
  unbound:
    path: "unbound" 
    namespace: "dns"
    priority: 1
    dependencies: []
    
  # Database (détectés dans votre structure)
  mysql:
    path: "database/mysql"
    namespace: "database"
    priority: 2
    dependencies: []
    
  phpmyadmin:
    path: "database/phpmyadmin"
    namespace: "database"
    priority: 3
    dependencies: ["mysql"]
    
  # Web Services
  web-apache:
    path: "web-apache"
    namespace: "web"
    priority: 2
    dependencies: []
    
  web-nginx:
    path: "web-nginx"
    namespace: "web" 
    priority: 2
    dependencies: []
    
  # Email Stack
  email:
    path: "email"
    namespace: "email"
    priority: 4
    dependencies: ["mysql"]

# Configuration Minikube
minikube:
  driver: "docker"  # ou "virtualbox" selon votre config
  memory: "4096"
  cpus: "2"
  kubernetes_version: "v1.28.0"  # adaptez selon votre version
  
# Chemins importants
paths:
  helm_charts: "."
  ansible_playbooks: "./ansible"
  docker_files: "./web-services/docker"
  
# Configuration CI/CD
ci_cd:
  # CI - Validation sur GitHub Actions
  ci:
    workflow: "helm-full-check.yml"
    trigger_method: "ansible"
    validation_types:
      - "helm_lint"
      - "yaml_lint" 
      - "security_audit"
      - "template_render"
      
  # CD - Déploiement sur Minikube (à créer)
  #cd:
   # workflow: "helm-deploy.yml"  # futur workflow
    #target: "minikube"
    #deployment_strategy: "rolling"
    #rollback_enabled: true
